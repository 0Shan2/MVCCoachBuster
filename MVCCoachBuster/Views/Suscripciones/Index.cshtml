@using MVCCoachBuster.ViewModels
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model ListadoViewModel<Suscripcion>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Registros[0].IdUsuario)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Registros[0].IdPlan)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Registros) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.IdUsuario)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdPlan)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@Html.PagedListPager(Model.Registros, page => Url.Action("Index", new {
    Pagina = page,
    TerminoBusqueda = Model.TerminoBusqueda
}),
new PagedListRenderOptions {
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" }
})
