@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using MVCCoachBuster.ViewModels
@model ListadoViewModel<Wod>

@{
    ViewData["Title"] = "Wods";
}

<h1>@ViewData["Title"]</h1>

@await Html.PartialAsync("Acciones/_CrearBusqueda", new CrearBusquedaViewModel{
    TerminoBusqueda = Model.TerminoBusqueda,
    TituloCrear = "Crear Wod",
    Total = Model.Total
})

<table class="table table-hover table-bordered table-striped">
    <thead class="bg-secondary text-white">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Registros[0].Nombre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Registros[0].Dia)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Registros) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DiaId)
            </td>
            <td>
                    <partial name="Acciones/_Crud" model="@item.Id" />
            </td>
        </tr>
}
    </tbody>
</table>

<!--Elemento de paginación-->
@Html.PagedListPager(Model.Registros,page=>Url.Action("Index", new {
    Pagina=page,
    TerminoBusqueda=Model.TerminoBusqueda
}),
    new PagedListRenderOptions{
        LiElementClasses = new string[]{"page-item"},
        PageClasses = new string[]{"page-link"}
    }
)
