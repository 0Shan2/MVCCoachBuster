@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using MVCCoachBuster.ViewModels
@model ListadoViewModel<WodXEjercicio>


@{
    ViewData["Title"] = "Listado Wod x Ejercicio";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Registros[0].Wod)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Registros[0].GrupoEjercicios)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Registros) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.WodId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.GrupoEjerciciosId)
            </td>
            <td>
                    <partial name="Acciones/_Crud" model="@item.Id" />
            </td>
        </tr>
}
    </tbody>
</table>
<!--Elemento de paginación-->
@Html.PagedListPager(Model.Registros,page=>Url.Action("Index", new {
    Pagina=page,
    TerminoBusqueda=Model.TerminoBusqueda
}),
    new PagedListRenderOptions{
        LiElementClasses = new string[]{"page-item"},
        PageClasses = new string[]{"page-link"}
    }
)
