@model MVCCoachBuster.Models.Dia

@{
    ViewData["Title"] = "Detalles del Día";
}

<h3>@Model.Nombre</h3>

<div>
    <div class="alert alert-info" role="alert">
        Progreso Wods: @ViewBag.WodsCompletados / @ViewBag.TotalWods
    </div>
    <div class="progress">
        <div class="progress-bar" role="progressbar" style="width: @(ViewBag.TotalWods != 0 ? ViewBag.WodsCompletados * 100 / ViewBag.TotalWods : 0)%;" aria-valuenow="@ViewBag.WodsCompletados" aria-valuemin="0" aria-valuemax="@ViewBag.TotalWods"></div>

    </div>
</div>

<div class="container">
    @foreach (var wod in Model.Wod)
    {
        <div class="card border-primary mb-4 ">
            <input class="form-check-input position-absolute top-0 end-0 m-3"
                   type="checkbox"
                   id="@wod.Id"
            @(wod.WodXEjercicio != null && wod.WodXEjercicio.Any(we => we.Progresos != null && we.Progresos.Any(p => p.IsCompleted)) ? "checked" : "")
                   onchange="updateProgress(@wod.Id, this.checked)" />

            <div class="card-header">
                @wod.Nombre
            </div>

            @foreach (var wodXEjercicio in wod.WodXEjercicio)
            {
                <div class="card-body ">
                    <ul>
                        <li>
                            @wodXEjercicio.GrupoEjercicios.Nombre
                            <a href="javascript:void(0);" onclick="openModal('instruccionesModal-@wodXEjercicio.GrupoEjercicios.Id')">
                                <i class="fas fa-sticky-note fa-lg"></i>
                            </a>
                            <a href="@wodXEjercicio.GrupoEjercicios.URLVideo" target="_blank">
                                <i class="fas fa-video fa-lg"></i>
                            </a>

                            @if (wodXEjercicio.Progresos != null && wodXEjercicio.Progresos.Any())
                            {
                                <span class="ml-2">Progreso: </span>
                                @foreach (var progreso in wodXEjercicio.Progresos)
                                {
                                    <span>
                                        <strong>Fecha: @progreso.Fecha, Completado: @progreso.IsCompleted</strong>
                                    </span>
                                }
                            }
                        </li>
                    </ul>
                </div>
            }
        </div>
    }
</div>

@foreach (var model in Model.Wod)
{
    foreach (var wodXEjercicio in model.WodXEjercicio)
    {
        <div id="instruccionesModal-@wodXEjercicio.GrupoEjercicios.Id" class="modal" style="display: none;" data-bs-backdrop="static" data-bs-keyboard="false">
            <div class="modal-dialog modal-dialog-centered ">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Instrucciones</h5>
                        <button type="button" class="btn-close" onclick="closeModal('instruccionesModal-@wodXEjercicio.GrupoEjercicios.Id')"></button>
                    </div>
                    <div class="modal-body">
                        <p>Instrucciones: @wodXEjercicio.GrupoEjercicios.Instrucciones</p>
                        <p>Video: @wodXEjercicio.GrupoEjercicios.URLVideo</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" onclick="closeModal('instruccionesModal-@wodXEjercicio.GrupoEjercicios.Id')">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    }
}

<a onclick="window.history.back();" class="btn btn-secondary">
    <i class="fa-solid fa-circle-arrow-left"></i>&nbsp;Regresar
</a>

<script>

    function updateProgress(wodId, isSelected) {
        const url = '/Dias/UpdateProgress';

        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ wodId: wodId, isSelected: isSelected }),
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(result => {
                // Actualizar la interfaz de usuario según sea necesario
                // Puedes manejar la lógica de actualización de la barra de progreso aquí

                // Actualizar el estado del checkbox basado en el resultado de la respuesta
                let checkbox = document.getElementById(wodId);
                checkbox.checked = result.IsWodCompleted;

                // Almacenar el estado del checkbox en sessionStorage
                sessionStorage.setItem(wodId, result.IsWodCompleted);

                // Simular un evento de cambio para asegurar la actualización visual
                let event = new Event('change');
                checkbox.dispatchEvent(event);

                // Actualizar la barra de progreso solo cuando se selecciona un elemento
                if (isSelected) {
                    let progressBar = document.querySelector(".progress-bar");
                    let diasCompletados = document.querySelectorAll("input:checked").length;
                    let totalDias = document.querySelectorAll("input").length;
                    let progreso = (diasCompletados / totalDias) * 100;
                    progressBar.style.width = progreso + "%";
                    progressBar.setAttribute("aria-valuenow", diasCompletados);
                }
            })
            .catch(error => {
                console.error('Error al actualizar el progreso:', error);
            });
    }


    function openModal(modalId) {
        var modal = document.getElementById(modalId);
        modal.style.display = "block";

        window.onclick = function (event) {
            if (event.target == modal) {
                closeModal(modalId);
            }
        };
    }

    function closeModal(modalId) {
        var modal = document.getElementById(modalId);
        modal.style.display = "none";
        window.onclick = null;
    }

    function openModal(modalId) {
        var modal = document.getElementById(modalId);
        modal.style.display = "block";

        window.onclick = function (event) {
            if (event.target == modal) {
                closeModal(modalId);
            }
        };
    }

    function closeModal(modalId) {
        var modal = document.getElementById(modalId);
        modal.style.display = "none";
        window.onclick = null;
    }
</script>
