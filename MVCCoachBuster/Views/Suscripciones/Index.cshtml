@using MVCCoachBuster.ViewModels
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@model ListadoViewModel<Suscripcion>

@{
    ViewData["Title"] = "Suscripciones";
}

<h4>@ViewData["Title"]</h4>
<hr />

<table class="table table-hover table-bordered table-striped">
    <thead class="bg-secondary text-white ">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Registros[0].IdUsuario)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Registros[0].IdPlan)
            </th>
            <th> </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Registros) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Usuario.Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Plan.Nombre)
            </td>
            <td>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">
                        <i class="fa-solid fa-trash"></i>&nbsp;Eliminar suscripción
                    </a>
            </td>
        </tr>
}
    </tbody>
</table>

<!--Elemento de paginación-->
@Html.PagedListPager(Model.Registros, page => Url.Action("Index", new {
    Pagina = page,
    TerminoBusqueda = Model.TerminoBusqueda
}),
new PagedListRenderOptions {
    LiElementClasses = new string[] { "page-item" },
    PageClasses = new string[] { "page-link" }
})
